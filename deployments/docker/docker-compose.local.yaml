services:
  # This container will start out as the leader.
  # The other containers will need to be added to the cluster
  # using this container's admin gRPC service.
  peer1:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile
    environment:
      Z4_PEER_ID: peer1
      Z4_PEER_ADVERTISE_ADDR: peer1:6356
      Z4_DB_DATA_DIR: /var/lib/z4/db
      Z4_PEER_DATA_DIR: /var/lib/z4/cluster
      # This command is essentially ignored when restarting this container
      # after bootstrapping it the first time, so we do not need to modify
      # it when testing failure scenarios.
      Z4_BOOTSTRAP_CLUSTER: true
    ports:
      - 6355:6355
      - 3306:3306
    volumes:
      - peer1_data:/var/lib/z4
  peer2:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile
    environment:
      Z4_PEER_ID: peer2
      Z4_PEER_ADVERTISE_ADDR: peer2:6356
      Z4_DB_DATA_DIR: /var/lib/z4/db
      Z4_PEER_DATA_DIR: /var/lib/z4/cluster
    ports:
      - 6455:6355
      - 3307:3306
    volumes:
      - peer2_data:/var/lib/z4
  peer3:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile
    environment:
      Z4_PEER_ID: peer3
      Z4_PEER_ADVERTISE_ADDR: peer3:6356
      Z4_DB_DATA_DIR: /var/lib/z4/db
      Z4_PEER_DATA_DIR: /var/lib/z4/cluster
    ports:
      - 6555:6355
      - 3308:3306
    volumes:
      - peer3_data:/var/lib/z4

volumes:
  peer1_data:
  peer2_data:
  peer3_data:
