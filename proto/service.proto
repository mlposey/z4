syntax = "proto3";
package z4;
option go_package = "github.com/mlposey/z4/proto;proto";

import "google/protobuf/timestamp.proto";

// The Admin service supports administrative/maintenance operations.
service Admin {
  rpc CheckHealth(CheckHealthRequest) returns (Status) {};
}

message CheckHealthRequest {
  string request_id = 1;
}

message Status {

}

// The Collection service manages tasks.
service Collection {
  rpc CreateTask(CreateTaskRequest) returns (Task) {};
  // TODO: Consider building CreateTaskStream

  rpc CreateTaskAsync(CreateTaskRequest) returns (Task) {};
  rpc CreateTaskStreamAsync(stream CreateTaskRequest) returns (stream TaskStreamResponse) {};

  rpc GetTaskStream(StreamTasksRequest) returns (stream Task) {};
}

message CreateTaskRequest {
  string request_id = 1;
  string namespace = 2;
  map<string, string> metadata = 3;
  bytes payload = 4;
  google.protobuf.Timestamp deliver_at = 5;
  int64 tts_seconds = 6;
}

message TaskStreamResponse {
  Task task = 1;
  uint32 status = 2;
  string message = 3;
}

message StreamTasksRequest {
  string request_id = 1;
  string namespace = 2;
}

message Task {
  string id = 1;
  string namespace = 2;
  map<string, string> metadata = 3;
  bytes payload = 4;
  google.protobuf.Timestamp deliver_at = 5;
}
