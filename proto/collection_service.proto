syntax = "proto3";
package z4;
option go_package = "github.com/mlposey/z4/proto;proto";

import "google/protobuf/timestamp.proto";

// The Collection service manages tasks.
service Collection {
  rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse) {};
  rpc CreateTaskStream(stream CreateTaskRequest) returns (stream TaskStreamResponse) {};

  rpc CreateTaskAsync(CreateTaskRequest) returns (CreateTaskResponse) {};
  rpc CreateTaskStreamAsync(stream CreateTaskRequest) returns (stream TaskStreamResponse) {};

  rpc GetTask(GetTaskRequest) returns (Task) {};
  rpc GetTaskStream(stream StreamTasksRequest) returns (stream Task) {};
}

message CreateTaskRequest {
  string request_id = 1;
  string namespace = 2;
  map<string, string> metadata = 3;
  bytes payload = 4;
  google.protobuf.Timestamp deliver_at = 5;
  int64 tts_seconds = 6;
}

message CreateTaskResponse {
  Task task = 1;
  string forwarded_to = 2;
}

message TaskStreamResponse {
  Task task = 1;
  uint32 status = 2;
  string message = 3;
  string forwarded_to = 4;
}

message StreamTasksRequest {
  oneof request {
    StartStreamRequest start_req = 1;
    Ack ack = 2;
  }
}

message StartStreamRequest {
  string request_id = 1;
  string namespace = 2;
}

message Ack {
  string namespace = 1;
  string task_id = 2;
}

message GetTaskRequest {
  string request_id = 1;
  string namespace = 2;
  string task_id = 3;
}

message Task {
  string id = 1;
  string namespace = 2;
  map<string, string> metadata = 3;
  bytes payload = 4;
  google.protobuf.Timestamp deliver_at = 5;
  // Last time the task was sent to the client due to not receiving an ack.
  google.protobuf.Timestamp last_retry = 6;
}
